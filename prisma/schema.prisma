// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  clerkId        String   @unique
  email          String   @unique
  username       String   @unique
  photo          String
  firstName      String?
  lastName       String?
  planId         Int      @default(1)
  creditBalance  Float    @default(10)
  images         Image[]  // One-to-many relationship: one user can have many images
  transactions   Transaction[]  // One-to-many relationship: one user can have many transactions
}

model Image {
  id                 String       @id @default(auto()) @map("_id") @db.ObjectId
  title              String
  transformationType String
  publicId           String
  secureURL          String
  width              Int?
  height             Int?
  config             Json?
  transformationUrl  String?
  aspectRatio        String?
  color              String?
  prompt             String?
  author             User?        @relation(fields: [authorId], references: [id])
  authorId           String        @db.ObjectId
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @default(now())
}

model Transaction {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime    @default(now())
  stripeId      String      @unique
  amount        Int
  plan          String?
  credits       Int?
  buyer         User?       @relation(fields: [buyerId], references: [id])
  buyerId       String       @db.ObjectId
}


